# Generated by Django 2.2.5 on 2019-11-26 14:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'plan_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Kierunki',
            fields=[
                ('id_kierunku', models.AutoField(primary_key=True, serialize=False)),
                ('nazwa_kierunku', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Kierunki',
            },
        ),
        migrations.CreateModel(
            name='PlanyNauczycieli',
            fields=[
                ('id_planu', models.AutoField(primary_key=True, serialize=False)),
                ('ObowiazujeOd', models.DateField()),
                ('ObowiazujeDo', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'PlanyNauczycieli',
            },
        ),
        migrations.CreateModel(
            name='PlanyStudentow',
            fields=[
                ('id_planu', models.AutoField(primary_key=True, serialize=False)),
                ('ObowiazujeOd', models.DateField()),
                ('ObowiazujeDo', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'PlanyStudentow',
            },
        ),
        migrations.CreateModel(
            name='Przedmioty',
            fields=[
                ('id_przedmiotu', models.AutoField(primary_key=True, serialize=False)),
                ('nazwa_przedmiotu', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Przedmioty',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id_sali', models.AutoField(primary_key=True, serialize=False)),
                ('nr_sali', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Sale',
            },
        ),
        migrations.CreateModel(
            name='Semestry',
            fields=[
                ('id_semestru', models.AutoField(primary_key=True, serialize=False)),
                ('nr_semestru', models.IntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('id_kierunku', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Kierunki')),
            ],
            options={
                'verbose_name_plural': 'Semestry',
            },
        ),
        migrations.CreateModel(
            name='Uczelnie',
            fields=[
                ('nazwa_uczelni', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('adres_uczelni', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Uczelnie',
            },
        ),
        migrations.CreateModel(
            name='Nauczyciele',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('pesel', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator('^\\d{11}')])),
                ('imie', models.CharField(max_length=100)),
                ('nazwisko', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Nauczyciele',
            },
        ),
        migrations.CreateModel(
            name='Studenci',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('pesel', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator('^\\d{11}')])),
                ('imie', models.CharField(max_length=100)),
                ('nazwisko', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Studenci',
            },
        ),
        migrations.CreateModel(
            name='ZajetoscSal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_rozpoczecia', models.DateTimeField()),
                ('data_zakonczenia', models.DateTimeField()),
                ('id_sali', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Sale')),
            ],
            options={
                'verbose_name_plural': 'ZajetoscSal',
                'unique_together': {('id_sali', 'data_rozpoczecia', 'data_zakonczenia')},
            },
        ),
        migrations.CreateModel(
            name='Wydziały',
            fields=[
                ('id_wydzialu', models.AutoField(primary_key=True, serialize=False)),
                ('nazwa_wydzialu', models.CharField(max_length=100)),
                ('id_uczelni', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Uczelnie')),
            ],
            options={
                'verbose_name_plural': 'Wydziały',
            },
        ),
        migrations.AddField(
            model_name='sale',
            name='id_wydzialu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Wydziały'),
        ),
        migrations.CreateModel(
            name='PlanyZajecStudentow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ_zajec', models.CharField(choices=[('W', 'Wykład'), ('C', 'Ćwiczenia'), ('PS', 'Pracownia_specjalistyczna'), ('L', 'Laboratiorium'), ('S', 'Seminarium'), ('K', 'Konsultacje')], max_length=2)),
                ('nr_grupy', models.IntegerField()),
                ('id_planu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.PlanyStudentow')),
                ('id_przedmiotu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Przedmioty')),
                ('id_sali', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.ZajetoscSal')),
                ('id_nauczyciela', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Nauczyciele')),
            ],
            options={
                'verbose_name_plural': 'PlanyZajecStudentow',
                'unique_together': {('id_planu', 'id_przedmiotu', 'id_nauczyciela', 'id_sali')},
            },
        ),
        migrations.AddField(
            model_name='kierunki',
            name='id_wydzialu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Wydziały'),
        ),
        migrations.CreateModel(
            name='StudentKierunekSemestr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_rozpoczecia', models.DateField()),
                ('data_zakonczenia', models.DateField()),
                ('id_semestru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Semestry')),
                ('id_studenta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Studenci')),
            ],
            options={
                'verbose_name_plural': 'StudentKierunekSemestr',
            },
        ),
        migrations.AlterUniqueTogether(
            name='sale',
            unique_together={('nr_sali', 'id_wydzialu')},
        ),
        migrations.CreateModel(
            name='PrzedmiotyWSemestrze',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liczba_ECTS', models.IntegerField(validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('id_przedmiotu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Przedmioty')),
                ('id_semestru', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Semestry')),
            ],
            options={
                'verbose_name_plural': 'PrzedmiotyWSemestrze',
                'unique_together': {('id_przedmiotu', 'id_semestru')},
            },
        ),
        migrations.CreateModel(
            name='PrzedmiotyNauczycieli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_przedmiotu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Przedmioty')),
                ('id_nauczyciela', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Nauczyciele')),
            ],
            options={
                'verbose_name_plural': 'PrzedmiotyNauczycieli',
            },
        ),
        migrations.CreateModel(
            name='PlanyZajecNauczycieli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ_zajec', models.CharField(choices=[('W', 'Wykład'), ('C', 'Ćwiczenia'), ('PS', 'Pracownia_specjalistyczna'), ('L', 'Laboratiorium'), ('S', 'Seminarium'), ('K', 'Konsultacje')], max_length=2)),
                ('nr_grupy', models.IntegerField()),
                ('id_planu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.PlanyNauczycieli')),
                ('id_przedmiotu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Przedmioty')),
                ('id_sali', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.ZajetoscSal')),
                ('plan_studentow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.PlanyZajecStudentow')),
            ],
            options={
                'verbose_name_plural': 'PlanyZajecNauczycieli',
                'unique_together': {('id_planu', 'id_przedmiotu', 'id_sali')},
            },
        ),
        migrations.AddField(
            model_name='planystudentow',
            name='nr_albumu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Studenci'),
        ),
        migrations.AddField(
            model_name='planynauczycieli',
            name='id_nauczyciela',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Nauczyciele'),
        ),
        migrations.CreateModel(
            name='MiejscaZatrudnienia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_wydzialu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Wydziały')),
                ('id_nauczyciela', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.Nauczyciele')),
            ],
            options={
                'verbose_name_plural': 'MiejscaZatrudnienia',
                'unique_together': {('id_wydzialu', 'id_nauczyciela')},
            },
        ),
    ]
